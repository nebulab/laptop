#!/usr/bin/env bash
### end common-components/bash-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

if [[ ! -d "$HOME/.bin/" ]]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch $HOME/.zshrc
fi

if [[ ":$PATH:" != *":$HOME/.bin:"* ]]; then
  printf 'export PATH="$HOME/.bin:$PATH"\n' >> ~/.zshrc
  export PATH="$HOME/.bin:$PATH"
fi
### end common-components/check-home-bin

fancy_echo() {
  printf "\n%b\n" "$1"
}

brew_install() {
  if brew list -1 | grep -q "^${1}\$"; then
    fancy_echo "Package '$1' is installed"
  else
    fancy_echo "Installing '$1' ..."
    brew install $1
  fi
}
### end common-components/shared-functions

fancy_echo "Changing your shell to zsh ..."
  chsh -s $(which zsh)
### end common-components/zsh

if [[ -f /etc/zshenv ]]; then
  fancy_echo "Fixing OSX zsh environment bug ..."
    sudo mv /etc/{zshenv,zshrc}
fi
### end mac-components/zsh-fix

if ! which brew &>/dev/null; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

  if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
    fancy_echo "Put Homebrew location earlier in PATH ..."
      printf '\n# recommended by brew doctor\n' >> ~/.zshrc
      printf 'export PATH="/usr/local/bin:$PATH"\n' >> ~/.zshrc
      export PATH="/usr/local/bin:$PATH"
  fi
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
  brew update

fancy_echo "Installing Cask to manage OSX applications ..."
  if brew list -1 | grep -q "^brew-cask$"; then
    fancy_echo "Package 'brew-cask' is installed"
  else
    brew install caskroom/cask/brew-cask
  fi
### end mac-components/homebrew

pkgs="
  postgresql mysql redis the_silver_searcher vim ctags tmux ghostscript
  reattach-to-user-namespace imagemagick phantomjs watch htop-osx wget node
"
for pkg in $pkgs; do
  brew_install $pkg
done
### end mac-components/packages

fancy_echo "Starting MySQL ..."
  ln -sfv /usr/local/opt/mysql/*plist ~/Library/LaunchAgents
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist 

fancy_echo "Starting Redis ..."
  ln -sfv /usr/local/opt/mysql/*plist ~/Library/LaunchAgents
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist

fancy_echo "Starting Postgres ..."
  ln -sfv /usr/local/opt/postgresql/*plist ~/Library/LaunchAgents
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
### end mac-components/start-services

fancy_echo "Installing rbenv, to change Ruby versions ..."
  brew_install rbenv

  if ! grep -qs "rbenv init" ~/.zshrc; then
    printf 'export PATH="$HOME/.rbenv/bin:$PATH"\n' >> ~/.zshrc
    printf 'eval "$(rbenv init - --no-rehash)"\n' >> ~/.zshrc

    fancy_echo "Enable shims and autocompletion ..."
      eval "$(rbenv init -)"
  fi

  export PATH="$HOME/.rbenv/bin:$PATH"

fancy_echo "Installing rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
  brew_install rbenv-gem-rehash

fancy_echo "Installing ruby-build, to install Rubies ..."
  brew_install ruby-build

fancy_echo "Installing rbenv-default-gems, to automatically install gems every time you install a new version of ruby ..."
  brew_install rbenv-default-gems

fancy_echo "Installing rbenv-aliases, to create aliases for rbenv Ruby versions ..."
  brew_install rbenv-aliases
### end mac-components/rbenv

fancy_echo "Creating ~/.rbenv/default-gems, to automatically install default gems every time you install a new version of ruby ..."
  touch ~/.rbenv/default-gems
  for gem in bundler pulsar invoker; do
    if ! grep -Fxq "$gem" ~/.rbenv/default-gems; then
      echo "$gem" >> ~/.rbenv/default-gems
    fi
  done
### end common-components/default-gems

fancy_echo "Installing GNU Compiler Collection, a necessary prerequisite to installing Ruby ..."
  brew tap homebrew/dupes
  brew install apple-gcc42

fancy_echo "Upgrading and linking OpenSSL ..."
  brew install openssl

export CC=gcc-4.2
### end mac-components/compiler-and-libraries

RUBY_VERSION="2.1.5"

if ! rbenv versions | grep -q $RUBY_VERSION; then
  fancy_echo "Installing Ruby $RUBY_VERSION ..."
    rbenv install $RUBY_VERSION
fi

fancy_echo "Setting $RUBY_VERSION as global default Ruby ..."
  rbenv global $RUBY_VERSION
  rbenv rehash

fancy_echo "Updating to latest Rubygems version ..."
  gem update --system
### end common-components/ruby-environment

fancy_echo "Installing bundler ..."
  gem install bundler

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))
### end mac-components/bundler

fancy_echo "Creating ~/.rbenv/default-gems, to automatically install default gems every time you install a new version of ruby ..."
  touch ~/.rbenv/default-gems
  for gem in bundler pulsar invoker; do
    if ! grep -Fxq "$gem" ~/.rbenv/default-gems; then
      echo "$gem" >> ~/.rbenv/default-gems
    fi
  done
### end common-components/default-gems

fancy_echo "Installing Heroku CLI client ..."
  brew_install heroku-toolbelt

fancy_echo "Installing the heroku-config plugin to pull config variables locally to be used as ENV variables ..."
  heroku plugins:install git://github.com/ddollar/heroku-config.git
### end mac-components/heroku

fancy_echo "Installing GitHub CLI client ..."
  brew_install hub
### end mac-components/github

fancy_echo "Installing rcm, to manage your dotfiles ..."
  brew tap thoughtbot/formulae
  brew install rcm
### end mac-components/rcm

fancy_echo "Installing Caffeine, a tool to prevent your Mac from sleeping ..."
  brew cask install caffeine

fancy_echo "Installing Chrome ..."
  brew cask install google-chrome

fancy_echo "Installing Firefox ..."
  brew cask install firefox

fancy_echo "Installing Skype, to talk to the world ..."
  brew cask install skype

fancy_echo "Installing Google Hangouts, to talk to your friends ..."
  brew cask install google-hangouts

fancy_echo "Installing The Unarchiver, a tool to extrac files ..."
  brew cask install the-unarchiver

fancy_echo "Installing iTerm2, one of the best terminal emulators for Mac ..."
  brew cask install iterm2

fancy_echo "Installing Slack, a chat client ..."
  brew cask install slack
### end mac-components/desktop-apps

fancy_echo "Installing your personal additions from ~/.laptop.local ..."
  if [ -f ~/.laptop.local  ]; then
    fancy_echo "Installing your personal additions from ~/.laptop.local ..."
    source ~/.laptop.local
  fi
### end common-components/personal-additions

